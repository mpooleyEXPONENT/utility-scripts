#!/bin/bash
# 
# gsum_tabulate.sh tabulates an update file generated by gsum.sh
# A file, file_to_tabulate, is converted into a more user-friendly format; file_to_tabulate must be an output from gsum.sh.
#
# Usage: gsum_tabulate.sh file_to_tabulate [delimiter]

# define reformatting for each line of file_to_tabulate
line_transform () {
    # line_transform() reformats a single line of file_to_tabule.
    # The filename is extracted from within the '()' and the corresponding hash value is extracted from after the '= ',
    # these two parameters are then seperated by a delimiter
    # USAGE: line_transform input [delimiter]
    #       sets a variable "output" that is the reformatted string
    #   input must be a string
    #   delimiter must be a string that is a valid delimiter (default is tab if this optional argument is not passed)
    #   output is a string
    
    # process input string to seperate filename and hash value
    input="$1"
    input_algorithm=${input%%\(*} # remove everything after and including the "("
    input_filename=${input##*/} # remove everything upto and including the "/" before the filename
    input_filename=${input_filename%%)*} # remove everything after and including the ")"
    input_hash=${input##*)= } # remove everything upto and including the ")= "
    
    # create output line in desired format
    if [ $# = 1 ]; then # default is to use tabs as delimiters
        output=$(printf '%s\t%s\t%s' "$input_algorithm" "$input_filename" "$input_hash")
    elif [ $# = 2 ]; then # if a second argument is supplied it is used as the delimiter instead of tabs
        output=$(printf '%s%s%s%s%s' "$input_algorithm" "$2" "$input_filename" "$2" "$input_hash")
    fi
}

# for loop to run over all lines of the input file, applying line_transform() to each line and echoing result into output file
if [ $# = 1 ]; then
    lineCount=0
    while read -r line
    do
        outFilename="tabulated_"$1""
        if [[ "$lineCount" -eq 0 ]]; then
            line_transform "$line"
            echo "$output" > "$outFilename"
        else
            line_transform "$line"
            echo "$output" >> "$outFilename"
        fi
        let "lineCount++"
    done < "$1"
elif [ $# = 2 ]; then
    lineCount=0
    while read -r line
    do
        outFilename="tabulated_"$1""
        if [[ "$lineCount" -eq 0 ]]; then
            line_transform "$line" "$2"
            echo "$output" > "$outFilename"
        else
            line_transform "$line" "$2"
            echo "$output" >> "$outFilename"
        fi
        let "lineCount++"
    done < "$1"
else
    echo
    echo ERROR: incorrect inputs to gsum_tabulate.
    echo "Usage: gsum_tabulate inputFilename [delimiter]"
    echo
fi
